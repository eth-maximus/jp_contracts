{"abi":[{"type":"function","name":"getSpender","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getTradeCalldata","inputs":[{"name":"_sourceToken","type":"address","internalType":"address"},{"name":"_destinationToken","type":"address","internalType":"address"},{"name":"_destinationAddress","type":"address","internalType":"address"},{"name":"_isSendTokenFixed","type":"bool","internalType":"bool"},{"name":"_sourceQuantity","type":"uint256","internalType":"uint256"},{"name":"_destinationQuantity","type":"uint256","internalType":"uint256"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getSpender()":"334fc289","getTradeCalldata(address,address,address,bool,uint256,uint256,bytes)":"e869b69b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getSpender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sourceToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_destinationToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_destinationAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isSendTokenFixed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_sourceQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_destinationQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"getTradeCalldata\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getTradeCalldata(address,address,address,bool,uint256,uint256,bytes)\":{\"params\":{\"_data\":\"Arbitrary bytes that can be used to store exchange specific parameters or logic\",\"_destinationAddress\":\"Address that assets should be transferred to\",\"_destinationQuantity\":\"Min/Fixed amount of destination tokens to receive\",\"_destinationToken\":\"Address of destination token to buy\",\"_isSendTokenFixed\":\"Boolean indicating if the send quantity is fixed, used to determine correct trade interface\",\"_sourceQuantity\":\"Fixed/Max amount of source token to sell\",\"_sourceToken\":\"Address of source token to be sold\"},\"returns\":{\"_0\":\"address                   Target contract address\",\"_1\":\"uint256                   Call value\",\"_2\":\"bytes                     Trade calldata\"}}}},\"userdoc\":{\"methods\":{\"getTradeCalldata(address,address,address,bool,uint256,uint256,bytes)\":{\"notice\":\"Returns calldata for executing trade on given adapter's exchange when using the GeneralIndexModule.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IIndexExchangeAdapter.sol\":\"IIndexExchangeAdapter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/interfaces/IIndexExchangeAdapter.sol\":{\"keccak256\":\"0xf977f568521dd1091f0e70c2e4031c7ea93ff4fda35cd6ebfabf8e41c15cb95a\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://6d3a3a64080cf40c560b9856f8bef3d14e9bc66fe8ff607d2528ce19f968e6e7\",\"dweb:/ipfs/QmP2LuMaPUD6KcwFfCBK5nzGU1RPz3qAXbjZ76BR4pHwJo\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.10+commit.00c0fcaf"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"getSpender","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_sourceToken","type":"address"},{"internalType":"address","name":"_destinationToken","type":"address"},{"internalType":"address","name":"_destinationAddress","type":"address"},{"internalType":"bool","name":"_isSendTokenFixed","type":"bool"},{"internalType":"uint256","name":"_sourceQuantity","type":"uint256"},{"internalType":"uint256","name":"_destinationQuantity","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"view","type":"function","name":"getTradeCalldata","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}]}],"devdoc":{"methods":{"getTradeCalldata(address,address,address,bool,uint256,uint256,bytes)":{"params":{"_data":"Arbitrary bytes that can be used to store exchange specific parameters or logic","_destinationAddress":"Address that assets should be transferred to","_destinationQuantity":"Min/Fixed amount of destination tokens to receive","_destinationToken":"Address of destination token to buy","_isSendTokenFixed":"Boolean indicating if the send quantity is fixed, used to determine correct trade interface","_sourceQuantity":"Fixed/Max amount of source token to sell","_sourceToken":"Address of source token to be sold"},"returns":{"_0":"address                   Target contract address","_1":"uint256                   Call value","_2":"bytes                     Trade calldata"}}}},"userdoc":{"methods":{"getTradeCalldata(address,address,address,bool,uint256,uint256,bytes)":{"notice":"Returns calldata for executing trade on given adapter's exchange when using the GeneralIndexModule."}}}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","@uniswap/=node_modules/@uniswap/","ds-test/=lib/forge-std/lib/ds-test/src/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/interfaces/IIndexExchangeAdapter.sol":"IIndexExchangeAdapter"},"evmVersion":"istanbul","libraries":{}},"sources":{"contracts/interfaces/IIndexExchangeAdapter.sol":{"keccak256":"0xf977f568521dd1091f0e70c2e4031c7ea93ff4fda35cd6ebfabf8e41c15cb95a","urls":["bzz-raw://6d3a3a64080cf40c560b9856f8bef3d14e9bc66fe8ff607d2528ce19f968e6e7","dweb:/ipfs/QmP2LuMaPUD6KcwFfCBK5nzGU1RPz3qAXbjZ76BR4pHwJo"],"license":"Apache License"}},"version":1},"id":7}