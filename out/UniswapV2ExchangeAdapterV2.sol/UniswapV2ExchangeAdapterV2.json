{"abi":[{"type":"constructor","inputs":[{"name":"_router","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"generateDataParam","inputs":[{"name":"_path","type":"address[]","internalType":"address[]"},{"name":"_isSendTokenFixed","type":"bool","internalType":"bool"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"getMaxAmountsIn","inputs":[{"name":"amountOut","type":"uint256","internalType":"uint256"},{"name":"path","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"amounts","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getMinAmountsOut","inputs":[{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"path","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"amounts","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getSpender","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getTradeCalldata","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"_destinationAddress","type":"address","internalType":"address"},{"name":"_sourceQuantity","type":"uint256","internalType":"uint256"},{"name":"_destinationQuantity","type":"uint256","internalType":"uint256"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getUniswapExchangeData","inputs":[{"name":"_path","type":"address[]","internalType":"address[]"},{"name":"_shouldSwapExactTokensForTokens","type":"bool","internalType":"bool"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"router","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"}],"bytecode":{"object":"0x60a060405234801561001057600080fd5b50604051610b17380380610b1783398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c610a746100a36000398061017c528061023d52806102be52806103cc52806104045250610a746000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063bff272be1161005b578063bff272be146100e0578063d055fc38146100ab578063e171fcab146100f3578063f887ea40146101155761007d565b80631bfeb407146100825780632173867a146100ab578063334fc289146100cb575b600080fd5b6100956100903660046106ff565b61011d565b6040516100a29190610837565b60405180910390f35b6100be6100b936600461056a565b61020e565b6040516100a2919061087b565b6100d361023b565b6040516100a291906107cf565b6100956100ee3660046106ff565b61025f565b6101066101013660046104a8565b6102f5565b6040516100a2939291906107e3565b6100d3610402565b6060815167ffffffffffffffff8111801561013757600080fd5b50604051908082528060200260200182016040528015610161578160200160208202803683370190505b506040516307c0329d60e21b81529091506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631f00ca74906101b3908690869060040161088e565b60006040518083038186803b1580156101cb57600080fd5b505afa1580156101df573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610207919081019061066c565b9392505050565b60608282604051602001610223929190610813565b60405160208183030381529060405290505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6060815167ffffffffffffffff8111801561027957600080fd5b506040519080825280602002602001820160405280156102a3578160200160208202803683370190505b5060405163d06ca61f60e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d06ca61f906101b3908690869060040161088e565b60008060608060008580602001905181019061031191906105ba565b9150915060608161033a576040518060800160405280604381526020016109fc60439139610354565b6040518060800160405280604381526020016109b9604391395b8261035f5788610361565b895b8361036c578a61036e565b895b858d426040516024016103859594939291906108af565b60408051601f1981840301815290829052916103a0916107b3565b6040519081900390206020820180516001600160e01b03166001600160e01b03199092169190911790527f0000000000000000000000000000000000000000000000000000000000000000965060009550935050505096509650969350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600082601f830112610436578081fd5b813561044961044482610912565b6108eb565b81815291506020808301908481018184028601820187101561046a57600080fd5b60005b8481101561049257813561048081610992565b8452928201929082019060010161046d565b505050505092915050565b8051610235816109aa565b60008060008060008060c087890312156104c0578182fd5b86356104cb81610992565b955060208701356104db81610992565b945060408701356104eb81610992565b9350606087013592506080870135915060a087013567ffffffffffffffff811115610514578182fd5b80880189601f820112610525578283fd5b8035915061053561044483610932565b8281528a6020848401011115610549578384fd5b61055a836020830160208501610956565b8093505050509295509295509295565b6000806040838503121561057c578182fd5b823567ffffffffffffffff811115610592578283fd5b61059e85828601610426565b92505060208301356105af816109aa565b809150509250929050565b600080604083850312156105cc578182fd5b825167ffffffffffffffff8111156105e2578283fd5b80840185601f8201126105f3578384fd5b8051915061060361044483610912565b808382526020808301925080840189828388028701011115610623578788fd5b8794505b8585101561064e57805161063a81610992565b845260019490940193928101928101610627565b5081965061065e89828a0161049d565b955050505050509250929050565b6000602080838503121561067e578182fd5b825167ffffffffffffffff811115610694578283fd5b80840185601f8201126106a5578384fd5b805191506106b561044483610912565b82815283810190828501858502840186018910156106d1578687fd5b8693505b848410156106f35780518352600193909301929185019185016106d5565b50979650505050505050565b60008060408385031215610711578182fd5b82359150602083013567ffffffffffffffff81111561072e578182fd5b61073a85828601610426565b9150509250929050565b6000815180845260208085019450808401835b8381101561077c5781516001600160a01b031687529582019590820190600101610757565b509495945050505050565b6000815180845261079f816020860160208601610962565b601f01601f19169290920160200192915050565b600082516107c5818460208701610962565b9190910192915050565b6001600160a01b0391909116815260200190565b600060018060a01b03851682528360208301526060604083015261080a6060830184610787565b95945050505050565b6000604082526108266040830185610744565b905082151560208301529392505050565b6020808252825182820181905260009190848201906040850190845b8181101561086f57835183529284019291840191600101610853565b50909695505050505050565b6000602082526102076020830184610787565b6000838252604060208301526108a76040830184610744565b949350505050565b600086825285602083015260a060408301526108ce60a0830186610744565b6001600160a01b0394909416606083015250608001529392505050565b60405181810167ffffffffffffffff8111828210171561090a57600080fd5b604052919050565b600067ffffffffffffffff821115610928578081fd5b5060209081020190565b600067ffffffffffffffff821115610948578081fd5b50601f01601f191660200190565b82818337506000910152565b60005b8381101561097d578181015183820152602001610965565b8381111561098c576000848401525b50505050565b6001600160a01b03811681146109a757600080fd5b50565b80151581146109a757600080fdfe737761704578616374546f6b656e73466f72546f6b656e732875696e743235362c75696e743235362c616464726573735b5d2c616464726573732c75696e743235362973776170546f6b656e73466f724578616374546f6b656e732875696e743235362c75696e743235362c616464726573735b5d2c616464726573732c75696e7432353629a26469706673582212209833107735d988bd23fb071dfdbbbb680a9100852f7e032f65473c81b6dee56264736f6c634300060a0033","sourceMap":"1458:5046:24:-:0;;;2331:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2377:16;;-1:-1:-1;;2377:16:24;;;1458:5046;;146:263:-1;;261:2;249:9;240:7;236:23;232:32;229:2;;;-1:-1;;267:12;229:2;83:13;;-1:-1;;;;;576:54;;701:35;;691:2;;-1:-1;;740:12;691:2;319:74;223:186;-1:-1;;;223:186;;1458:5046:24;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063bff272be1161005b578063bff272be146100e0578063d055fc38146100ab578063e171fcab146100f3578063f887ea40146101155761007d565b80631bfeb407146100825780632173867a146100ab578063334fc289146100cb575b600080fd5b6100956100903660046106ff565b61011d565b6040516100a29190610837565b60405180910390f35b6100be6100b936600461056a565b61020e565b6040516100a2919061087b565b6100d361023b565b6040516100a291906107cf565b6100956100ee3660046106ff565b61025f565b6101066101013660046104a8565b6102f5565b6040516100a2939291906107e3565b6100d3610402565b6060815167ffffffffffffffff8111801561013757600080fd5b50604051908082528060200260200182016040528015610161578160200160208202803683370190505b506040516307c0329d60e21b81529091506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631f00ca74906101b3908690869060040161088e565b60006040518083038186803b1580156101cb57600080fd5b505afa1580156101df573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610207919081019061066c565b9392505050565b60608282604051602001610223929190610813565b60405160208183030381529060405290505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6060815167ffffffffffffffff8111801561027957600080fd5b506040519080825280602002602001820160405280156102a3578160200160208202803683370190505b5060405163d06ca61f60e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d06ca61f906101b3908690869060040161088e565b60008060608060008580602001905181019061031191906105ba565b9150915060608161033a576040518060800160405280604381526020016109fc60439139610354565b6040518060800160405280604381526020016109b9604391395b8261035f5788610361565b895b8361036c578a61036e565b895b858d426040516024016103859594939291906108af565b60408051601f1981840301815290829052916103a0916107b3565b6040519081900390206020820180516001600160e01b03166001600160e01b03199092169190911790527f0000000000000000000000000000000000000000000000000000000000000000965060009550935050505096509650969350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600082601f830112610436578081fd5b813561044961044482610912565b6108eb565b81815291506020808301908481018184028601820187101561046a57600080fd5b60005b8481101561049257813561048081610992565b8452928201929082019060010161046d565b505050505092915050565b8051610235816109aa565b60008060008060008060c087890312156104c0578182fd5b86356104cb81610992565b955060208701356104db81610992565b945060408701356104eb81610992565b9350606087013592506080870135915060a087013567ffffffffffffffff811115610514578182fd5b80880189601f820112610525578283fd5b8035915061053561044483610932565b8281528a6020848401011115610549578384fd5b61055a836020830160208501610956565b8093505050509295509295509295565b6000806040838503121561057c578182fd5b823567ffffffffffffffff811115610592578283fd5b61059e85828601610426565b92505060208301356105af816109aa565b809150509250929050565b600080604083850312156105cc578182fd5b825167ffffffffffffffff8111156105e2578283fd5b80840185601f8201126105f3578384fd5b8051915061060361044483610912565b808382526020808301925080840189828388028701011115610623578788fd5b8794505b8585101561064e57805161063a81610992565b845260019490940193928101928101610627565b5081965061065e89828a0161049d565b955050505050509250929050565b6000602080838503121561067e578182fd5b825167ffffffffffffffff811115610694578283fd5b80840185601f8201126106a5578384fd5b805191506106b561044483610912565b82815283810190828501858502840186018910156106d1578687fd5b8693505b848410156106f35780518352600193909301929185019185016106d5565b50979650505050505050565b60008060408385031215610711578182fd5b82359150602083013567ffffffffffffffff81111561072e578182fd5b61073a85828601610426565b9150509250929050565b6000815180845260208085019450808401835b8381101561077c5781516001600160a01b031687529582019590820190600101610757565b509495945050505050565b6000815180845261079f816020860160208601610962565b601f01601f19169290920160200192915050565b600082516107c5818460208701610962565b9190910192915050565b6001600160a01b0391909116815260200190565b600060018060a01b03851682528360208301526060604083015261080a6060830184610787565b95945050505050565b6000604082526108266040830185610744565b905082151560208301529392505050565b6020808252825182820181905260009190848201906040850190845b8181101561086f57835183529284019291840191600101610853565b50909695505050505050565b6000602082526102076020830184610787565b6000838252604060208301526108a76040830184610744565b949350505050565b600086825285602083015260a060408301526108ce60a0830186610744565b6001600160a01b0394909416606083015250608001529392505050565b60405181810167ffffffffffffffff8111828210171561090a57600080fd5b604052919050565b600067ffffffffffffffff821115610928578081fd5b5060209081020190565b600067ffffffffffffffff821115610948578081fd5b50601f01601f191660200190565b82818337506000910152565b60005b8381101561097d578181015183820152602001610965565b8381111561098c576000848401525b50505050565b6001600160a01b03811681146109a757600080fd5b50565b80151581146109a757600080fdfe737761704578616374546f6b656e73466f72546f6b656e732875696e743235362c75696e743235362c616464726573735b5d2c616464726573732c75696e743235362973776170546f6b656e73466f724578616374546f6b656e732875696e743235362c75696e743235362c616464726573735b5d2c616464726573732c75696e7432353629a26469706673582212209833107735d988bd23fb071dfdbbbb680a9100852f7e032f65473c81b6dee56264736f6c634300060a0033","sourceMap":"1458:5046:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6257:245;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5459:205;;;;;;;;;:::i;:::-;;;;;;;;5161:84;;;:::i;:::-;;;;;;;;5841:245;;;;;;;;;:::i;3417:939::-;;;;;;;;;:::i;:::-;;;;;;;;;;1672:31;;;:::i;6257:245::-;6347:24;6407:4;:11;6393:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6393:26:24;-1:-1:-1;6439:56:24;;-1:-1:-1;;;6439:56:24;;6383:36;;-1:-1:-1;6458:6:24;-1:-1:-1;;;;;6439:39:24;;;;:56;;6479:9;;6490:4;;6439:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6439:56:24;;;;;;;;;;;;;;6429:66;6257:245;-1:-1:-1;;;6257:245:24:o;5459:205::-;5576:12;5618:5;5625:31;5607:50;;;;;;;;;;;;;;;;;;;;;;;5600:57;;5459:205;;;;;:::o;5161:84::-;5232:6;5161:84;:::o;5841:245::-;5931:24;5991:4;:11;5977:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5977:26:24;-1:-1:-1;6023:56:24;;-1:-1:-1;;;6023:56:24;;5967:36;;-1:-1:-1;6042:6:24;-1:-1:-1;;;;;6023:40:24;;-1:-1:-1;;6023:56:24;;6064:8;;6074:4;;6023:56;;;;3417:939;3709:7;3718;3727:12;3769:21;3804:35;3863:5;3852:35;;;;;;;;;;;;;;3755:132;;;;3898:21;3959:30;:92;;4023:28;;;;;;;;;;;;;;;;;3959:92;;;3992:28;;;;;;;;;;;;;;;;;3959:92;4065:30;:71;;4116:20;4065:71;;;4098:15;4065:71;4150:30;:71;;4206:15;4150:71;;;4183:20;4150:71;4235:4;4253:19;4286:15;3922:389;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3922:389:24;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3922:389:24;-1:-1:-1;;;;;;3922:389:24;;;;;;;;;4329:6;;-1:-1:-1;;;3922:389:24;;-1:-1:-1;4329:6:24;-1:-1:-1;;;;;;;;;;3417:939:24:o;1672:31::-;;;:::o;301:707:-1:-;;418:3;411:4;403:6;399:17;395:27;385:2;;-1:-1;;426:12;385:2;473:6;460:20;495:80;510:64;567:6;510:64;;;495:80;;;603:21;;;486:89;-1:-1;647:4;660:14;;;;635:17;;;749;;;740:27;;;;737:36;-1:-1;734:2;;;786:1;;776:12;734:2;811:1;796:206;821:6;818:1;815:13;796:206;;;85:6;72:20;97:33;124:5;97:33;;;889:50;;953:14;;;;981;;;;843:1;836:9;796:206;;;800:14;;;;;378:630;;;;;2643:128;2718:13;;2736:30;2718:13;2736:30;;3505:973;;;;;;;3703:3;3691:9;3682:7;3678:23;3674:33;3671:2;;;-1:-1;;3710:12;3671:2;85:6;72:20;97:33;124:5;97:33;;;3762:63;-1:-1;3862:2;3901:22;;72:20;97:33;72:20;97:33;;;3870:63;-1:-1;3970:2;4009:22;;72:20;97:33;72:20;97:33;;;3978:63;-1:-1;4078:2;4117:22;;3294:20;;-1:-1;4186:3;4226:22;;3294:20;;-1:-1;4323:3;4308:19;;4295:33;4348:18;4337:30;;4334:2;;;-1:-1;;4370:12;4334:2;4445:6;4434:9;4430:22;2880:3;2873:4;2865:6;2861:17;2857:27;2847:2;;-1:-1;;2888:12;2847:2;2935:6;2922:20;2908:34;;2957:64;2972:48;3013:6;2972:48;;2957:64;3041:6;3034:5;3027:21;3145:3;3862:2;3136:6;3069;3127:16;;3124:25;3121:2;;;-1:-1;;3152:12;3121:2;3172:41;3206:6;3862:2;3103:5;3099:16;3862:2;3069:6;3065:17;3172:41;;;4390:72;;;;;;3665:813;;;;;;;;;4485:496;;;4628:2;4616:9;4607:7;4603:23;4599:32;4596:2;;;-1:-1;;4634:12;4596:2;4692:17;4679:31;4730:18;4722:6;4719:30;4716:2;;;-1:-1;;4752:12;4716:2;4782:78;4852:7;4843:6;4832:9;4828:22;4782:78;;;4772:88;;;4897:2;4937:9;4933:22;2576:20;2601:30;2625:5;2601:30;;;4905:60;;;;4590:391;;;;;;4988:522;;;5142:2;5130:9;5121:7;5117:23;5113:32;5110:2;;;-1:-1;;5148:12;5110:2;5199:17;5193:24;5237:18;5229:6;5226:30;5223:2;;;-1:-1;;5259:12;5223:2;5361:6;5350:9;5346:22;1162:3;1155:4;1147:6;1143:17;1139:27;1129:2;;-1:-1;;1170:12;1129:2;1210:6;1204:13;1190:27;;1232:80;1247:64;1304:6;1247:64;;1232:80;1318:16;1354:6;1347:5;1340:21;1384:4;;1401:3;1397:14;1390:21;;1384:4;1376:6;1372:17;1506:3;1384:4;;1490:6;1486:17;1376:6;1477:27;;1474:36;1471:2;;;-1:-1;;1513:12;1471:2;-1:-1;1539:10;;1533:217;1558:6;1555:1;1552:13;1533:217;;;226:6;220:13;238:33;265:5;238:33;;;1626:61;;1580:1;1573:9;;;;;1701:14;;;;1729;;1533:217;;;1537:14;5279:99;;;5433:61;5486:7;1384:4;5466:9;5462:22;5433:61;;;5423:71;;;;;;;5104:406;;;;;;5517:392;;5657:2;;5645:9;5636:7;5632:23;5628:32;5625:2;;;-1:-1;;5663:12;5625:2;5714:17;5708:24;5752:18;5744:6;5741:30;5738:2;;;-1:-1;;5774:12;5738:2;5876:6;5865:9;5861:22;1910:3;1903:4;1895:6;1891:17;1887:27;1877:2;;-1:-1;;1918:12;1877:2;1958:6;1952:13;1938:27;;1980:80;1995:64;2052:6;1995:64;;1980:80;2088:21;;;2145:14;;;;2120:17;;;2234;;;2225:27;;;;2222:36;-1:-1;2219:2;;;-1:-1;;2261:12;2219:2;-1:-1;2287:10;;2281:217;2306:6;2303:1;2300:13;2281:217;;;3442:13;;2374:61;;2328:1;2321:9;;;;;2449:14;;;;2477;;2281:217;;;-1:-1;5794:99;5619:290;-1:-1;;;;;;;5619:290;5916:502;;;6062:2;6050:9;6041:7;6037:23;6033:32;6030:2;;;-1:-1;;6068:12;6030:2;3307:6;3294:20;6120:63;;6248:2;6237:9;6233:18;6220:32;6272:18;6264:6;6261:30;6258:2;;;-1:-1;;6294:12;6258:2;6324:78;6394:7;6385:6;6374:9;6370:22;6324:78;;;6314:88;;;6024:394;;;;;;7050:690;;7243:5;14690:12;15493:6;15488:3;15481:19;15530:4;;15525:3;15521:14;7255:93;;15530:4;7419:5;14386:14;-1:-1;7458:260;7483:6;7480:1;7477:13;7458:260;;;7544:13;;-1:-1;;;;;16313:54;6850:37;;6579:14;;;;15221;;;;-1:-1;7498:9;7458:260;;;-1:-1;7724:10;;7174:566;-1:-1;;;;;7174:566;8588:343;;8730:5;14690:12;15493:6;15488:3;15481:19;8823:52;8868:6;15530:4;15525:3;15521:14;15530:4;8849:5;8845:16;8823:52;;;16973:7;16957:14;-1:-1;;16953:28;8887:39;;;;15530:4;8887:39;;8678:253;-1:-1;;8678:253;9535:275;;9101:5;14690:12;9213:52;9258:6;9253:3;9246:4;9239:5;9235:16;9213:52;;;9277:16;;;;;9671:139;-1:-1;;9671:139;9817:222;-1:-1;;;;;16313:54;;;;6850:37;;9944:2;9929:18;;9915:124;10046:528;;4348:18;;16324:42;;;16317:5;16313:54;6857:3;6850:37;9396:5;10411:2;10400:9;10396:18;9366:37;10247:2;10448;10437:9;10433:18;10426:48;10488:76;10247:2;10236:9;10232:18;10550:6;10488:76;;;10480:84;10218:356;-1:-1;;;;;10218:356;10581:469;;10780:2;10801:17;10794:47;10855:108;10780:2;10769:9;10765:18;10949:6;10855:108;;;10847:116;;8569:5;16225:13;16218:21;11036:2;11025:9;11021:18;8542:34;10751:299;;;;;;11057:370;11234:2;11248:47;;;14690:12;;11219:18;;;15481:19;;;11057:370;;11234:2;14386:14;;;;15521;;;;11057:370;8187:260;8212:6;8209:1;8206:13;8187:260;;;8273:13;;9366:37;;15221:14;;;;6761;;;;8234:1;8227:9;8187:260;;;-1:-1;11301:116;;11205:222;-1:-1;;;;;;11205:222;11434:306;;11579:2;11600:17;11593:47;11654:76;11579:2;11568:9;11564:18;11716:6;11654:76;;11747:481;;9396:5;9373:3;9366:37;11952:2;12070;12059:9;12055:18;12048:48;12110:108;11952:2;11941:9;11937:18;12204:6;12110:108;;;12102:116;11923:305;-1:-1;;;;11923:305;12235:816;;9396:5;9373:3;9366:37;9396:5;12689:2;12678:9;12674:18;9366:37;12524:3;12726:2;12715:9;12711:18;12704:48;12766:108;12524:3;12513:9;12509:19;12860:6;12766:108;;;-1:-1;;;;;16313:54;;;;12953:2;12938:18;;6850:37;-1:-1;13036:3;13021:19;9366:37;16313:54;12758:116;-1:-1;;;12495:556;13058:256;13120:2;13114:9;13146:17;;;13221:18;13206:34;;13242:22;;;13203:62;13200:2;;;13278:1;;13268:12;13200:2;13120;13287:22;13098:216;;-1:-1;13098:216;13321:304;;13480:18;13472:6;13469:30;13466:2;;;-1:-1;;13502:12;13466:2;-1:-1;13547:4;13535:17;;;13600:15;;13403:222;13943:321;;14086:18;14078:6;14075:30;14072:2;;;-1:-1;;14108:12;14072:2;-1:-1;16973:7;14162:17;-1:-1;;14158:33;14249:4;14239:15;;14009:255;16459:145;16540:6;16535:3;16530;16517:30;-1:-1;16596:1;16578:16;;16571:27;16510:94;16613:268;16678:1;16685:101;16699:6;16696:1;16693:13;16685:101;;;16766:11;;;16760:18;16747:11;;;16740:39;16721:2;16714:10;16685:101;;;16801:6;16798:1;16795:13;16792:2;;;16678:1;16857:6;16852:3;16848:16;16841:27;16792:2;;16662:219;;;;16994:117;-1:-1;;;;;16313:54;;17053:35;;17043:2;;17102:1;;17092:12;17043:2;17037:74;;17118:111;17199:5;16225:13;16218:21;17177:5;17174:32;17164:2;;17220:1;;17210:12","linkReferences":{},"immutableReferences":{"5552":[{"start":380,"length":32},{"start":573,"length":32},{"start":702,"length":32},{"start":972,"length":32},{"start":1028,"length":32}]}},"methodIdentifiers":{"generateDataParam(address[],bool)":"d055fc38","getMaxAmountsIn(uint256,address[])":"1bfeb407","getMinAmountsOut(uint256,address[])":"bff272be","getSpender()":"334fc289","getTradeCalldata(address,address,address,uint256,uint256,bytes)":"e171fcab","getUniswapExchangeData(address[],bool)":"2173867a","router()":"f887ea40"},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_isSendTokenFixed\",\"type\":\"bool\"}],\"name\":\"generateDataParam\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getMaxAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getMinAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSpender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_destinationAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sourceQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_destinationQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"getTradeCalldata\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_shouldSwapExactTokensForTokens\",\"type\":\"bool\"}],\"name\":\"getUniswapExchangeData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Cook Finance A Uniswap Router02 exchange adapter that returns calldata for trading. Includes option for 2 different trade types on Uniswap. CHANGE LOG: - Add helper that encodes path and boolean into bytes - Generalized ability to choose whether to swap an exact amount of source token for a min amount of receive token or swap a max amount of source token for an exact amount of receive token - Add helper to generate data parameter for `getTradeCallData`\",\"methods\":{\"constructor\":{\"params\":{\"_router\":\"Address of Uniswap V2 Router02 contract\"}},\"generateDataParam(address[],bool)\":{\"params\":{\"_isSendTokenFixed\":\"Address of the destination token to buy \",\"_path\":\"Transaction path\"},\"returns\":{\"_0\":\"bytes                Data parameter to be passed to `getTradeCallData`          \"}},\"getMaxAmountsIn(uint256,address[])\":{\"returns\":{\"amounts\":\"             minimum amounts to send for trading on Uniswap\"}},\"getMinAmountsOut(uint256,address[])\":{\"returns\":{\"amounts\":\"             minimum amounts to receive for trading on Uniswap\"}},\"getSpender()\":{\"returns\":{\"_0\":\"address             Address of the contract to approve tokens to\"}},\"getTradeCalldata(address,address,address,uint256,uint256,bytes)\":{\"params\":{\"_data\":\"Arbitrary bytes containing trade path and bool to determine function string\",\"_destinationAddress\":\"Address that assets should be transferred to\",\"_destinationQuantity\":\"Min/Fixed amount of destination token to buy\",\"_sourceQuantity\":\"Fixed/Max amount of source token to sell\"},\"returns\":{\"_0\":\"address                   Target contract address\",\"_1\":\"uint256                   Call value\",\"_2\":\"bytes                     Trade calldata\"}},\"getUniswapExchangeData(address[],bool)\":{\"returns\":{\"_0\":\"bytes               Encoded data used for trading on Uniswap\"}}},\"title\":\"UniswapV2ExchangeAdapterV2\"},\"userdoc\":{\"methods\":{\"constructor\":\"Set state variables\",\"generateDataParam(address[],bool)\":{\"notice\":\"Generate data parameter to be passed to `getTradeCallData`. Returns encoded trade paths and bool to select trade function.\"},\"getMaxAmountsIn(uint256,address[])\":{\"notice\":\"Helper that returns the the maximum amounts to send\"},\"getMinAmountsOut(uint256,address[])\":{\"notice\":\"Helper that returns the the minimum amounts to receive\"},\"getSpender()\":{\"notice\":\"Returns the address to approve source tokens to for trading. This is the Uniswap router address\"},\"getTradeCalldata(address,address,address,uint256,uint256,bytes)\":{\"notice\":\"Return calldata for Uniswap V2 Router02. Trade paths and bool to select trade function are encoded in the arbitrary data parameter. Note: When selecting the swap for exact tokens function, _sourceQuantity is defined as the max token quantity you are willing to trade, and _minDestinationQuantity is the exact quantity of token you are receiving.\"},\"getUniswapExchangeData(address[],bool)\":{\"notice\":\"Helper that returns the encoded data of trade path and boolean indicating the Uniswap function to use\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/integration/wrap/UniswapV2ExchangeAdapterV2.sol\":\"UniswapV2ExchangeAdapterV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/interfaces/external/IUniswapV2Router.sol\":{\"keccak256\":\"0x21196bb42360de5cfff65cbf9bcd0d926080e647b0d9a607b18fed5075749a04\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://ec02f7d1e05f353179e0e5fd2c6b623629a8cfabd745d4695fca876b2f6cd164\",\"dweb:/ipfs/QmYLPUnrya6Wv4jHzgZJvExkvx8VY5t8v8C8nviDtpZ9cB\"]},\"contracts/interfaces/external/IUniswapV2Router02.sol\":{\"keccak256\":\"0xc70a2297ad752020f5a6ea68bbef76bfa0a8837734c204df2343da3697c7a9a6\",\"urls\":[\"bzz-raw://e680b8a0c5e4738e94a77d008b21fa948639a8ec0667beec82970244ff7b54c8\",\"dweb:/ipfs/QmWg4bKCHJGait6hJUxPzBsNqjUinbzaAhrQHAT14zyqx1\"]},\"contracts/lib/PreciseUnitMath.sol\":{\"keccak256\":\"0x0b7b6b83027882339b6776885e2a9b74eb35c058ead0bb07e93bc326aa6bbf81\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://a449558ac191b81f7299e46f63d40048b1c0821aeca11a873c18cb52d8d16aa7\",\"dweb:/ipfs/QmU5JxNfCBeJ4zwagbYWaDyvB2JKYSA2GtwREtRk4QHJ5P\"]},\"contracts/protocol/integration/wrap/UniswapV2ExchangeAdapterV2.sol\":{\"keccak256\":\"0x28345b7283764944dae3786406778f80639701dfea12d2745f236c30b21c9f57\",\"license\":\"Apache License\",\"urls\":[\"bzz-raw://9153d29a21cdf9e728a48bf9f60aa706c8946c3388138d7d26b5afbb6f8d8005\",\"dweb:/ipfs/QmeB1KL2VxsoFSn5J92ZAEABvuUwpAGegqsFNhQVqJzUCu\"]},\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"node_modules/@openzeppelin/contracts/math/SignedSafeMath.sol\":{\"keccak256\":\"0x5ad029bc2f649d37e63b4e7911ea203986b830f5b30823c110f2e407d4f10778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de3cdac3730452a4835323c2429baa660b1c2744a91cc0f0f74dace5666a02c2\",\"dweb:/ipfs/QmVpjyZ6RBHeZcTub3LXnHncQtP91Zfi4dBUaXU95MRfhP\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.10+commit.00c0fcaf"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_router","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address[]","name":"_path","type":"address[]"},{"internalType":"bool","name":"_isSendTokenFixed","type":"bool"}],"stateMutability":"pure","type":"function","name":"generateDataParam","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"stateMutability":"view","type":"function","name":"getMaxAmountsIn","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}]},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"stateMutability":"view","type":"function","name":"getMinAmountsOut","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getSpender","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"_destinationAddress","type":"address"},{"internalType":"uint256","name":"_sourceQuantity","type":"uint256"},{"internalType":"uint256","name":"_destinationQuantity","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"view","type":"function","name":"getTradeCalldata","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"address[]","name":"_path","type":"address[]"},{"internalType":"bool","name":"_shouldSwapExactTokensForTokens","type":"bool"}],"stateMutability":"pure","type":"function","name":"getUniswapExchangeData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"router","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"methods":{"constructor":{"params":{"_router":"Address of Uniswap V2 Router02 contract"}},"generateDataParam(address[],bool)":{"params":{"_isSendTokenFixed":"Address of the destination token to buy ","_path":"Transaction path"},"returns":{"_0":"bytes                Data parameter to be passed to `getTradeCallData`          "}},"getMaxAmountsIn(uint256,address[])":{"returns":{"amounts":"             minimum amounts to send for trading on Uniswap"}},"getMinAmountsOut(uint256,address[])":{"returns":{"amounts":"             minimum amounts to receive for trading on Uniswap"}},"getSpender()":{"returns":{"_0":"address             Address of the contract to approve tokens to"}},"getTradeCalldata(address,address,address,uint256,uint256,bytes)":{"params":{"_data":"Arbitrary bytes containing trade path and bool to determine function string","_destinationAddress":"Address that assets should be transferred to","_destinationQuantity":"Min/Fixed amount of destination token to buy","_sourceQuantity":"Fixed/Max amount of source token to sell"},"returns":{"_0":"address                   Target contract address","_1":"uint256                   Call value","_2":"bytes                     Trade calldata"}},"getUniswapExchangeData(address[],bool)":{"returns":{"_0":"bytes               Encoded data used for trading on Uniswap"}}}},"userdoc":{"methods":{"constructor":"Set state variables","generateDataParam(address[],bool)":{"notice":"Generate data parameter to be passed to `getTradeCallData`. Returns encoded trade paths and bool to select trade function."},"getMaxAmountsIn(uint256,address[])":{"notice":"Helper that returns the the maximum amounts to send"},"getMinAmountsOut(uint256,address[])":{"notice":"Helper that returns the the minimum amounts to receive"},"getSpender()":{"notice":"Returns the address to approve source tokens to for trading. This is the Uniswap router address"},"getTradeCalldata(address,address,address,uint256,uint256,bytes)":{"notice":"Return calldata for Uniswap V2 Router02. Trade paths and bool to select trade function are encoded in the arbitrary data parameter. Note: When selecting the swap for exact tokens function, _sourceQuantity is defined as the max token quantity you are willing to trade, and _minDestinationQuantity is the exact quantity of token you are receiving."},"getUniswapExchangeData(address[],bool)":{"notice":"Helper that returns the encoded data of trade path and boolean indicating the Uniswap function to use"}}}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","@uniswap/=node_modules/@uniswap/","ds-test/=lib/forge-std/lib/ds-test/src/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/protocol/integration/wrap/UniswapV2ExchangeAdapterV2.sol":"UniswapV2ExchangeAdapterV2"},"evmVersion":"istanbul","libraries":{}},"sources":{"contracts/interfaces/external/IUniswapV2Router.sol":{"keccak256":"0x21196bb42360de5cfff65cbf9bcd0d926080e647b0d9a607b18fed5075749a04","urls":["bzz-raw://ec02f7d1e05f353179e0e5fd2c6b623629a8cfabd745d4695fca876b2f6cd164","dweb:/ipfs/QmYLPUnrya6Wv4jHzgZJvExkvx8VY5t8v8C8nviDtpZ9cB"],"license":"Apache License"},"contracts/interfaces/external/IUniswapV2Router02.sol":{"keccak256":"0xc70a2297ad752020f5a6ea68bbef76bfa0a8837734c204df2343da3697c7a9a6","urls":["bzz-raw://e680b8a0c5e4738e94a77d008b21fa948639a8ec0667beec82970244ff7b54c8","dweb:/ipfs/QmWg4bKCHJGait6hJUxPzBsNqjUinbzaAhrQHAT14zyqx1"],"license":null},"contracts/lib/PreciseUnitMath.sol":{"keccak256":"0x0b7b6b83027882339b6776885e2a9b74eb35c058ead0bb07e93bc326aa6bbf81","urls":["bzz-raw://a449558ac191b81f7299e46f63d40048b1c0821aeca11a873c18cb52d8d16aa7","dweb:/ipfs/QmU5JxNfCBeJ4zwagbYWaDyvB2JKYSA2GtwREtRk4QHJ5P"],"license":"Apache License"},"contracts/protocol/integration/wrap/UniswapV2ExchangeAdapterV2.sol":{"keccak256":"0x28345b7283764944dae3786406778f80639701dfea12d2745f236c30b21c9f57","urls":["bzz-raw://9153d29a21cdf9e728a48bf9f60aa706c8946c3388138d7d26b5afbb6f8d8005","dweb:/ipfs/QmeB1KL2VxsoFSn5J92ZAEABvuUwpAGegqsFNhQVqJzUCu"],"license":"Apache License"},"node_modules/@openzeppelin/contracts/math/SafeMath.sol":{"keccak256":"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806","urls":["bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5","dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV"],"license":"MIT"},"node_modules/@openzeppelin/contracts/math/SignedSafeMath.sol":{"keccak256":"0x5ad029bc2f649d37e63b4e7911ea203986b830f5b30823c110f2e407d4f10778","urls":["bzz-raw://de3cdac3730452a4835323c2429baa660b1c2744a91cc0f0f74dace5666a02c2","dweb:/ipfs/QmVpjyZ6RBHeZcTub3LXnHncQtP91Zfi4dBUaXU95MRfhP"],"license":"MIT"}},"version":1},"id":24}